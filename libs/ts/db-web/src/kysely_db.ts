/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Account {
  accessToken: string | null;
  accessTokenExpiresAt: Timestamp | null;
  accountId: string;
  createdAt: Timestamp;
  id: string;
  idToken: string | null;
  password: string | null;
  providerId: string;
  refreshToken: string | null;
  refreshTokenExpiresAt: Timestamp | null;
  scope: string | null;
  updatedAt: Timestamp;
  userId: string;
}

export interface PgStatMonitor {
  application_name: string | null;
  bucket: Int8 | null;
  bucket_done: boolean | null;
  bucket_start_time: Timestamp | null;
  calls: Int8 | null;
  client_ip: string | null;
  cmd_type: number | null;
  cmd_type_text: string | null;
  comments: string | null;
  cpu_sys_time: number | null;
  cpu_user_time: number | null;
  datname: string | null;
  dbid: number | null;
  elevel: number | null;
  jit_deform_count: Int8 | null;
  jit_deform_time: number | null;
  jit_emission_count: Int8 | null;
  jit_emission_time: number | null;
  jit_functions: Int8 | null;
  jit_generation_time: number | null;
  jit_inlining_count: Int8 | null;
  jit_inlining_time: number | null;
  jit_optimization_count: Int8 | null;
  jit_optimization_time: number | null;
  local_blk_read_time: number | null;
  local_blk_write_time: number | null;
  local_blks_dirtied: Int8 | null;
  local_blks_hit: Int8 | null;
  local_blks_read: Int8 | null;
  local_blks_written: Int8 | null;
  max_exec_time: number | null;
  max_plan_time: number | null;
  mean_exec_time: number | null;
  mean_plan_time: number | null;
  message: string | null;
  min_exec_time: number | null;
  min_plan_time: number | null;
  minmax_stats_since: Timestamp | null;
  pgsm_query_id: Int8 | null;
  planid: Int8 | null;
  plans: Int8 | null;
  query: string | null;
  query_plan: string | null;
  queryid: Int8 | null;
  relations: string[] | null;
  resp_calls: string[] | null;
  rows: Int8 | null;
  shared_blk_read_time: number | null;
  shared_blk_write_time: number | null;
  shared_blks_dirtied: Int8 | null;
  shared_blks_hit: Int8 | null;
  shared_blks_read: Int8 | null;
  shared_blks_written: Int8 | null;
  sqlcode: string | null;
  stats_since: Timestamp | null;
  stddev_exec_time: number | null;
  stddev_plan_time: number | null;
  temp_blk_read_time: number | null;
  temp_blk_write_time: number | null;
  temp_blks_read: Int8 | null;
  temp_blks_written: Int8 | null;
  top_query: string | null;
  top_queryid: Int8 | null;
  toplevel: boolean | null;
  total_exec_time: number | null;
  total_plan_time: number | null;
  userid: number | null;
  username: string | null;
  wal_bytes: Numeric | null;
  wal_fpi: Int8 | null;
  wal_records: Int8 | null;
}

export interface Session {
  createdAt: Timestamp;
  expiresAt: Timestamp;
  id: string;
  ipAddress: string | null;
  token: string;
  updatedAt: Timestamp;
  userAgent: string | null;
  userId: string;
}

export interface User {
  createdAt: Timestamp;
  email: string;
  emailSettingsEndingProposals: Generated<boolean>;
  emailSettingsNewDiscussions: Generated<boolean>;
  emailSettingsNewProposals: Generated<boolean>;
  emailVerified: boolean;
  id: string;
  image: string | null;
  isOnboarded: Generated<boolean>;
  name: string;
  updatedAt: Timestamp;
}

export interface UserNotification {
  id: Generated<string>;
  sentAt: Generated<Timestamp>;
  targetId: string;
  type: string;
  userId: string;
}

export interface UserProposalGroupLastRead {
  id: Generated<string>;
  last_read_at: Timestamp | null;
  proposal_group_id: string;
  user_id: string;
}

export interface Verification {
  createdAt: Timestamp | null;
  expiresAt: Timestamp;
  id: string;
  identifier: string;
  updatedAt: Timestamp | null;
  value: string;
}

export interface DB {
  account: Account;
  pg_stat_monitor: PgStatMonitor;
  session: Session;
  user: User;
  user_notification: UserNotification;
  user_proposal_group_last_read: UserProposalGroupLastRead;
  verification: Verification;
}
