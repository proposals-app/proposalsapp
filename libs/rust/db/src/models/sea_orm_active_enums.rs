//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "indexer_type")]
pub enum IndexerType {
    #[sea_orm(string_value = "PROPOSALS")]
    Proposals,
    #[sea_orm(string_value = "VOTES")]
    Votes,
    #[sea_orm(string_value = "VOTING_POWER")]
    VotingPower,
    #[sea_orm(string_value = "DELEGATION")]
    Delegation,
    #[sea_orm(string_value = "PROPOSALS_AND_VOTES")]
    ProposalsAndVotes,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize, Hash)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "indexer_variant")]
pub enum IndexerVariant {
    #[sea_orm(string_value = "AAVE_V2_MAINNET_PROPOSALS")]
    AaveV2MainnetProposals,
    #[sea_orm(string_value = "AAVE_V2_MAINNET_VOTES")]
    AaveV2MainnetVotes,
    #[sea_orm(string_value = "AAVE_V3_MAINNET_PROPOSALS")]
    AaveV3MainnetProposals,
    #[sea_orm(string_value = "AAVE_V3_MAINNET_VOTES")]
    AaveV3MainnetVotes,
    #[sea_orm(string_value = "AAVE_V3_POLYGON_VOTES")]
    AaveV3PolygonVotes,
    #[sea_orm(string_value = "AAVE_V3_AVALANCHE_VOTES")]
    AaveV3AvalancheVotes,
    #[sea_orm(string_value = "COMPOUND_MAINNET_PROPOSALS")]
    CompoundMainnetProposals,
    #[sea_orm(string_value = "COMPOUND_MAINNET_VOTES")]
    CompoundMainnetVotes,
    #[sea_orm(string_value = "UNISWAP_MAINNET_PROPOSALS")]
    UniswapMainnetProposals,
    #[sea_orm(string_value = "UNISWAP_MAINNET_VOTES")]
    UniswapMainnetVotes,
    #[sea_orm(string_value = "ENS_MAINNET_PROPOSALS")]
    EnsMainnetProposals,
    #[sea_orm(string_value = "ENS_MAINNET_VOTES")]
    EnsMainnetVotes,
    #[sea_orm(string_value = "GITCOIN_MAINNET_PROPOSALS")]
    GitcoinMainnetProposals,
    #[sea_orm(string_value = "GITCOIN_MAINNET_VOTES")]
    GitcoinMainnetVotes,
    #[sea_orm(string_value = "GITCOIN_V2_MAINNET_PROPOSALS")]
    GitcoinV2MainnetProposals,
    #[sea_orm(string_value = "GITCOIN_V2_MAINNET_VOTES")]
    GitcoinV2MainnetVotes,
    #[sea_orm(string_value = "HOP_MAINNET_PROPOSALS")]
    HopMainnetProposals,
    #[sea_orm(string_value = "HOP_MAINNET_VOTES")]
    HopMainnetVotes,
    #[sea_orm(string_value = "DYDX_MAINNET_PROPOSALS")]
    DydxMainnetProposals,
    #[sea_orm(string_value = "DYDX_MAINNET_VOTES")]
    DydxMainnetVotes,
    #[sea_orm(string_value = "FRAX_ALPHA_MAINNET_PROPOSALS")]
    FraxAlphaMainnetProposals,
    #[sea_orm(string_value = "FRAX_ALPHA_MAINNET_VOTES")]
    FraxAlphaMainnetVotes,
    #[sea_orm(string_value = "FRAX_OMEGA_MAINNET_PROPOSALS")]
    FraxOmegaMainnetProposals,
    #[sea_orm(string_value = "FRAX_OMEGA_MAINNET_VOTES")]
    FraxOmegaMainnetVotes,
    #[sea_orm(string_value = "NOUNS_PROPOSALS_MAINNET_PROPOSALS")]
    NounsProposalsMainnetProposals,
    #[sea_orm(string_value = "NOUNS_PROPOSALS_MAINNET_VOTES")]
    NounsProposalsMainnetVotes,
    #[sea_orm(string_value = "OP_OPTIMISM_PROPOSALS")]
    OpOptimismProposals,
    #[sea_orm(string_value = "OP_OPTIMISM_VOTES")]
    OpOptimismVotes,
    #[sea_orm(string_value = "ARB_CORE_ARBITRUM_PROPOSALS")]
    ArbCoreArbitrumProposals,
    #[sea_orm(string_value = "ARB_CORE_ARBITRUM_VOTES")]
    ArbCoreArbitrumVotes,
    #[sea_orm(string_value = "ARB_TREASURY_ARBITRUM_PROPOSALS")]
    ArbTreasuryArbitrumProposals,
    #[sea_orm(string_value = "ARB_TREASURY_ARBITRUM_VOTES")]
    ArbTreasuryArbitrumVotes,
    #[sea_orm(string_value = "MAKER_EXECUTIVE_MAINNET_PROPOSALS")]
    MakerExecutiveMainnetProposals,
    #[sea_orm(string_value = "MAKER_EXECUTIVE_MAINNET_VOTES")]
    MakerExecutiveMainnetVotes,
    #[sea_orm(string_value = "MAKER_POLL_MAINNET_PROPOSALS")]
    MakerPollMainnetProposals,
    #[sea_orm(string_value = "MAKER_POLL_MAINNET_VOTES")]
    MakerPollMainnetVotes,
    #[sea_orm(string_value = "MAKER_POLL_ARBITRUM_VOTES")]
    MakerPollArbitrumVotes,
    #[sea_orm(string_value = "SNAPSHOT_PROPOSALS")]
    SnapshotProposals,
    #[sea_orm(string_value = "SNAPSHOT_VOTES")]
    SnapshotVotes,
    #[sea_orm(string_value = "ARB_ARBITRUM_VOTING_POWER")]
    ArbArbitrumVotingPower,
    #[sea_orm(string_value = "ARB_ARBITRUM_DELEGATION")]
    ArbArbitrumDelegation,
    #[sea_orm(string_value = "ARBITRUM_COUNCIL_NOMINATIONS")]
    ArbitrumCouncilNominations,
    #[sea_orm(string_value = "ARBITRUM_COUNCIL_ELECTIONS")]
    ArbitrumCouncilElections,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "proposal_state")]
pub enum ProposalState {
    #[sea_orm(string_value = "PENDING")]
    Pending,
    #[sea_orm(string_value = "ACTIVE")]
    Active,
    #[sea_orm(string_value = "CANCELED")]
    Canceled,
    #[sea_orm(string_value = "DEFEATED")]
    Defeated,
    #[sea_orm(string_value = "SUCCEEDED")]
    Succeeded,
    #[sea_orm(string_value = "QUEUED")]
    Queued,
    #[sea_orm(string_value = "EXPIRED")]
    Expired,
    #[sea_orm(string_value = "EXECUTED")]
    Executed,
    #[sea_orm(string_value = "HIDDEN")]
    Hidden,
    #[sea_orm(string_value = "UNKNOWN")]
    Unknown,
}
