---
- name: Install and Configure Nomad Servers
  hosts: nomad_servers
  become: true
  tasks:
    - name: Set connection to use tailscale IP if available
      set_fact:
        ansible_host: "{{ tailscale_ip }}"
      when: tailscale_ip is defined and tailscale_ip != ''
    - name: Install Nomad
      apt:
        name: nomad
        state: present

    - name: Create Nomad server configuration
      template:
        src: ../templates/nomad-server.hcl.j2
        dest: /etc/nomad/nomad.hcl
        owner: nomad
        group: nomad
        mode: "0640"
      notify: restart nomad

    - name: Create systemd override directory for Nomad
      file:
        path: /etc/systemd/system/nomad.service.d
        state: directory
        mode: '0755'

    - name: Create Nomad systemd service override
      copy:
        content: |
          [Service]
          Environment="CONSUL_HTTP_ADDR=http://127.0.0.1:{{ consul_client_port }}"
        dest: /etc/systemd/system/nomad.service.d/override.conf
      notify:
        - reload systemd
        - restart nomad

    - name: Start and enable Nomad
      systemd:
        name: nomad
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Wait for Nomad to be ready
      wait_for:
        port: "{{ nomad_http_port }}"
        delay: 5

    - name: Wait for leader election
      shell: nomad operator raft list-peers
      register: raft_result
      until: raft_result.rc == 0
      retries: 10
      delay: 5
      run_once: true

    - name: Bootstrap Nomad ACL system
      shell: nomad acl bootstrap -json
      register: nomad_bootstrap_result
      run_once: true
      ignore_errors: true
      when: nomad_acl_enabled | default(false)

    - name: Save bootstrap token
      copy:
        content: "{{ nomad_bootstrap_result.stdout }}"
        dest: /root/nomad-bootstrap.json
        mode: "0600"
      when: 
        - nomad_bootstrap_result is succeeded
        - nomad_bootstrap_result.stdout != ""
      run_once: true

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: restart nomad
      systemd:
        name: nomad
        state: restarted

- name: Install and Configure Nomad Clients
  hosts: nomad_clients
  become: true
  tasks:
    - name: Set connection to use tailscale IP if available
      set_fact:
        ansible_host: "{{ tailscale_ip }}"
      when: tailscale_ip is defined and tailscale_ip != ''
    - name: Install Nomad
      apt:
        name: nomad
        state: present

    - name: Install Docker
      apt:
        name:
          - docker.io
          - docker-compose
        state: present

    - name: Add nomad user to docker group
      user:
        name: nomad
        groups: docker
        append: yes

    - name: Create Nomad client configuration
      template:
        src: ../templates/nomad-client.hcl.j2
        dest: /etc/nomad/nomad.hcl
        owner: nomad
        group: nomad
        mode: "0640"
      notify: restart nomad

    - name: Create Docker daemon configuration
      copy:
        content: |
          {
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m",
              "max-file": "3"
            },
            "storage-driver": "overlay2",
            "metrics-addr": "127.0.0.1:9323",
            "experimental": true
          }
        dest: /etc/docker/daemon.json
      notify: restart docker

    - name: Start and enable services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - docker
        - nomad

  handlers:
    - name: restart nomad
      systemd:
        name: nomad
        state: restarted

    - name: restart docker
      systemd:
        name: docker
        state: restarted
