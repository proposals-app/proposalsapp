#!/bin/bash
# Script to verify Patroni node is properly registered in Consul
# Note: Cross-DC visibility is now handled by etcd, not consul-replicate

set -e

NODE_NAME="{{ inventory_hostname }}"
CONSUL_PORT="{{ consul_client_port }}"
PATRONI_CONFIG="/etc/patroni/patroni.yml"
MAX_RETRIES=30
RETRY_DELAY=5

echo "Verifying Patroni registration for $NODE_NAME..."

# Function to check if node is registered in a specific datacenter
check_registration_in_dc() {
    local dc=$1
    # Check for the proposalsapp service in the specified datacenter
    local services=$(curl -s "http://localhost:${CONSUL_PORT}/v1/catalog/service/proposalsapp?dc=${dc}" 2>/dev/null)
    
    if [ -n "$services" ] && [ "$services" != "null" ] && [ "$services" != "[]" ]; then
        # Check if this specific node is in the service list
        if echo "$services" | grep -q "\"Node\":\"${NODE_NAME}\""; then
            echo "✓ Node registered as proposalsapp service in datacenter $dc"
            return 0
        fi
    fi
    echo "✗ Node not yet registered in datacenter $dc"
    return 1
}

# Wait for local registration first
echo "Waiting for local Consul registration..."
i=1
while [ $i -le $MAX_RETRIES ]; do
    if check_registration_in_dc "{{ datacenter }}"; then
        break
    fi
    echo "Attempt $i/$MAX_RETRIES - waiting ${RETRY_DELAY}s..."
    sleep $RETRY_DELAY
    i=$((i + 1))
done

if [ $i -gt $MAX_RETRIES ]; then
    echo "ERROR: Failed to register in local datacenter after $((MAX_RETRIES * RETRY_DELAY)) seconds"
    exit 1
fi

# Force a Patroni REST API call to ensure it updates its state
echo "Triggering Patroni state update..."
curl -s http://localhost:{{ patroni_rest_api_port }}/cluster >/dev/null 2>&1 || true

# Give Consul time to propagate the registration
echo "Waiting for Consul service registration to stabilize..."
sleep 5

# Note: With etcd as DCS, cross-DC checks are less critical
# Each DC has its own Consul catalog, services are DC-local
# PgCat will discover local services via Consul Template
echo "Note: Services are registered locally in each DC's Consul catalog"
echo "Cross-DC visibility is handled by WAN federation, not replication"

# Only check local datacenter registration
echo "Verifying local datacenter registration..."
if check_registration_in_dc "{{ datacenter }}"; then
    echo "SUCCESS: Node $NODE_NAME is registered in local datacenter {{ datacenter }}"
    all_registered=true
else
    all_registered=false
fi

if [ "$all_registered" = "true" ]; then
    echo "SUCCESS: Node $NODE_NAME is properly registered for service discovery"
else
    echo "WARNING: Node $NODE_NAME is not yet registered in local datacenter"
    
    # Try to force a re-registration
    echo "Attempting to force re-registration..."
    systemctl reload patroni || true
    sleep 5
fi

# Final cluster state check
echo ""
echo "Current cluster state:"
/var/lib/postgresql/.local/bin/patronictl -c $PATRONI_CONFIG list

exit 0