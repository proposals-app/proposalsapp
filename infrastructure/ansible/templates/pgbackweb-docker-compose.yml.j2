version: "3.9"
services:
  # pgbackweb's own PostgreSQL database for internal use
  pgbackweb-db:
    image: postgres:15-alpine
    container_name: pgbackweb-db
    restart: unless-stopped
    volumes:
      - pgbackweb_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: pgbackweb
      POSTGRES_USER: pgbackweb
      POSTGRES_PASSWORD: "{{ pgbackweb_db_password | default('pgbackweb_secure_pass') }}"
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "127.0.0.1:5433:5432"  # Expose on localhost only, different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pgbackweb -d pgbackweb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pgbackweb:
    image: eduardolat/pgbackweb:{{ pgbackweb_version }}
    container_name: pgbackweb
    restart: unless-stopped
    network_mode: host
    volumes:
      - {{ pgbackweb_backup_dir }}:/backups
    environment:
      # pgbackweb's internal database connection (local PostgreSQL container)
      PBW_POSTGRES_CONN_STRING: "postgresql://pgbackweb:{{ pgbackweb_db_password | default('pgbackweb_secure_pass') }}@localhost:5433/pgbackweb?sslmode=disable"
      PBW_ENCRYPTION_KEY: "{{ pgbackweb_encryption_key }}"
      PBW_LISTEN_HOST: "0.0.0.0"
      PBW_LISTEN_PORT: "8085"
      TZ: "UTC"
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8085' || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      pgbackweb-db:
        condition: service_healthy

volumes:
  pgbackweb_db_data:
    driver: local