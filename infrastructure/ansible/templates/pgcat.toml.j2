# PgCat configuration - managed by Ansible
# This configuration is dynamically updated by Consul Template

[general]
# Listen on all interfaces
host = "0.0.0.0"
port = 5432

# Admin API
admin_username = "pgcat"
admin_password = "{{ pgcat_admin_password | default('pgcat') }}"
admin_api_enabled = true

# Metrics endpoint
prometheus_exporter_enabled = true
prometheus_exporter_port = 9930

# Connection pooling settings
pool_mode = "transaction"
default_pool_size = {{ pgcat_pool_size | default(25) }}
min_pool_size = {{ pgcat_min_pool_size | default(10) }}
reserve_pool_size = {{ pgcat_reserve_pool_size | default(5) }}
reserve_pool_timeout = "{{ pgcat_reserve_pool_timeout | default('3s') }}"

# Query parsing for intelligent routing
query_parser_enabled = true
query_parser_read_write_splitting = true
primary_reads_enabled = false

# Connection settings
connect_timeout = "{{ pgcat_connect_timeout | default('5s') }}"
idle_timeout = "{{ pgcat_idle_timeout | default('30m') }}"
acquire_timeout = "{{ pgcat_acquire_timeout | default('3s') }}"
cancel_wait_timeout = "{{ pgcat_cancel_wait_timeout | default('5s') }}"

# Health checks
healthcheck_timeout = "{{ pgcat_healthcheck_timeout | default('1s') }}"
healthcheck_delay = "{{ pgcat_healthcheck_delay | default('30s') }}"
ban_time = "{{ pgcat_ban_time | default('60s') }}"

# Logging
log_level = "{{ pgcat_log_level | default('info') }}"
log_connections = {{ pgcat_log_connections | default('false') | lower }}
log_disconnections = {{ pgcat_log_disconnections | default('false') | lower }}
log_client_parameter_status_changes = false

# TLS settings
{% if pgcat_tls_enabled | default(false) %}
tls_certificate = "{{ pgcat_tls_certificate }}"
tls_private_key = "{{ pgcat_tls_private_key }}"
{% endif %}

# Authentication
auth_query_enabled = false
validate_server_cert = {{ pgcat_validate_server_cert | default('false') | lower }}

# Buffer sizes
tcp_user_timeout = "{{ pgcat_tcp_user_timeout | default('0') }}"
server_tcp_keepalive_time = {{ pgcat_tcp_keepalive_time | default(7200) }}
server_tcp_keepalive_interval = {{ pgcat_tcp_keepalive_interval | default(75) }}
server_tcp_keepalive_count = {{ pgcat_tcp_keepalive_count | default(9) }}

# Worker threads
worker_threads = {{ pgcat_worker_threads | default(4) }}

# Connection pool configuration for ProposalsApp
[pools.{{ database_name | default('proposalsapp') }}]
pool_mode = "transaction"
primary_reads_enabled = false
query_parser_enabled = true
query_parser_read_write_splitting = true
default_pool_size = {{ pgcat_pool_size | default(25) }}
min_pool_size = {{ pgcat_min_pool_size | default(10) }}

# Database user configuration
[pools.{{ database_name | default('proposalsapp') }}.users.{{ database_user | default('proposalsapp') }}]
password = "{{ database_password }}"
pool_size = {{ pgcat_user_pool_size | default(10) }}
statement_timeout = "{{ pgcat_statement_timeout | default('0') }}"

# Shards configuration (will be managed by Consul Template)
# Primary shard - for all write queries
[[pools.{{ database_name | default('proposalsapp') }}.shards]]
servers = [
{% for host in groups['postgres'] %}
{% if hostvars[host]['postgres_role'] | default('replica') == 'primary' %}
    ["{{ hostvars[host]['ansible_default_ipv4']['address'] }}", 5432, "primary"],
{% endif %}
{% endfor %}
]
role = "primary"

# Replica shards - for read queries
# Prefer local datacenter replicas
[[pools.{{ database_name | default('proposalsapp') }}.shards]]
servers = [
{% for host in groups['postgres'] %}
{% if hostvars[host]['postgres_role'] | default('replica') == 'replica' and hostvars[host]['datacenter'] | default('dc1') == datacenter | default('dc1') %}
    ["{{ hostvars[host]['ansible_default_ipv4']['address'] }}", 5432, "replica"],
{% endif %}
{% endfor %}
]
role = "replica"

# Remote datacenter replicas (lower priority)
{% if enable_cross_dc_reads | default(false) %}
[[pools.{{ database_name | default('proposalsapp') }}.shards]]
servers = [
{% for host in groups['postgres'] %}
{% if hostvars[host]['postgres_role'] | default('replica') == 'replica' and hostvars[host]['datacenter'] | default('dc1') != datacenter | default('dc1') %}
    ["{{ hostvars[host]['ansible_default_ipv4']['address'] }}", 5432, "replica"],
{% endif %}
{% endfor %}
]
role = "replica"
{% endif %}

# Additional users (if needed)
{% for user in additional_database_users | default([]) %}
[pools.{{ database_name | default('proposalsapp') }}.users.{{ user.name }}]
password = "{{ user.password }}"
pool_size = {{ user.pool_size | default(5) }}
{% endfor %}