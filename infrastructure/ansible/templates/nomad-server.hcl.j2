datacenter = "{{ datacenter }}"
region = "{{ nomad_region }}"
data_dir = "/var/lib/nomad"
log_level = "INFO"

bind_addr = "0.0.0.0"

# Use Tailscale IP for cluster communication
advertise {
  http = "{{ tailscale_ip | default(ansible_default_ipv4.address) }}"
  rpc = "{{ tailscale_ip | default(ansible_default_ipv4.address) }}"
  serf = "{{ tailscale_ip | default(ansible_default_ipv4.address) }}"
}

server {
  enabled = true
  bootstrap_expect = 3
  encrypt = "{{ nomad_encrypt_key }}"
  
  # Enable multi-region federation
  authoritative_region = "{{ nomad_region }}"
  
  server_join {
    retry_join = [
      {% for host in groups['nomad_servers'] %}
      {% if host != inventory_hostname %}
      "{{ hostvars[host].tailscale_ip | default(hostvars[host].ansible_default_ipv4.address) }}",
      {% endif %}
      {% endfor %}
    ]
  }
}

client {
  enabled = false
}

consul {
  address = "127.0.0.1:{{ consul_client_port }}"
  server_service_name = "nomad"
  client_service_name = "nomad-client"
  auto_advertise = true
  server_auto_join = true
  client_auto_join = true
}

acl {
  enabled = {{ nomad_acl_enabled | default(true) | lower }}
}

telemetry {
  collection_interval = "1s"
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
}

plugin "raw_exec" {
  config {
    enabled = false
  }
}

plugin "docker" {
  config {
    endpoint = "unix:///var/run/docker.sock"
    gc {
      image = true
      image_delay = "3m"
      container = true
    }
    volumes {
      enabled = true
    }
    allow_privileged = false
  }
}