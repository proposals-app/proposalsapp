---
- name: Setup local Docker registry for GitHub runners
  hosts: github_runners
  become: true
  vars:
    registry_port: 5000
    registry_data_dir: /var/lib/docker-registry
    
  tasks:
    - name: Create registry data directory
      file:
        path: "{{ registry_data_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Run local Docker registry
      docker_container:
        name: registry
        image: registry:2
        state: started
        restart_policy: always
        ports:
          - "{{ registry_port }}:5000"
        volumes:
          - "{{ registry_data_dir }}:/var/lib/registry"
        env:
          REGISTRY_STORAGE_DELETE_ENABLED: "true"
          REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: "/var/lib/registry"
          # Enable garbage collection and maintenance
          REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR: "inmemory"
          REGISTRY_STORAGE_MAINTENANCE_UPLOADPURGING_ENABLED: "true"
          REGISTRY_STORAGE_MAINTENANCE_UPLOADPURGING_AGE: "168h"
          REGISTRY_STORAGE_MAINTENANCE_UPLOADPURGING_INTERVAL: "24h"
          # Increase HTTP timeouts for large layers
          REGISTRY_HTTP_TIMEOUT_READ: "900s"
          REGISTRY_HTTP_TIMEOUT_WRITE: "900s"
          REGISTRY_HTTP_TIMEOUT_IDLE: "900s"
          # Performance tuning
          REGISTRY_HTTP_SECRET: "{{ vault_docker_registry_secret | default('myregistrysecret') }}"
          REGISTRY_HTTP_ADDR: "0.0.0.0:5000"
          # Increase max body size for large layers
          REGISTRY_HTTP_HEADERS_X_CONTENT_TYPE_OPTIONS: "[nosniff]"

    - name: Configure Docker daemon to use insecure registry
      copy:
        content: |
          {
            "insecure-registries": ["localhost:{{ registry_port }}"],
            "registry-mirrors": ["http://localhost:{{ registry_port }}"]
          }
        dest: /etc/docker/daemon.json
        backup: yes
      notify: restart docker

    - name: Create registry garbage collection script
      copy:
        content: |
          #!/bin/bash
          # Garbage collect the registry to free up space
          docker exec registry bin/registry garbage-collect /etc/docker/registry/config.yml
        dest: /usr/local/bin/registry-gc
        mode: '0755'

    - name: Setup cron job for registry garbage collection
      cron:
        name: "Docker registry garbage collection"
        minute: "0"
        hour: "3"
        job: "/usr/local/bin/registry-gc > /var/log/registry-gc.log 2>&1"

    - name: Test registry
      uri:
        url: "http://localhost:{{ registry_port }}/v2/"
        method: GET
        status_code: 200
      retries: 3
      delay: 5

  handlers:
    - name: restart docker
      systemd:
        name: docker
        state: restarted
        daemon_reload: yes