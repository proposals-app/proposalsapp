name: Rust Tests

on:
  pull_request:
  push:
    branches:
      - "**"

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
  RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"

jobs:
  build-test-coverage:
    name: Build, Test & Coverage
    permissions:
      checks: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: llvm-tools-preview

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install grcov
        run: cargo install grcov cargo-nextest --locked

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo t-ci --verbose
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          ARBISCAN_API_KEY: ${{ secrets.ARBISCAN_API_KEY }}
          OPTIMISTIC_SCAN_API_KEY: ${{ secrets.OPTIMISTIC_SCAN_API_KEY }}
          ARBITRUM_NODE_URL: ${{ secrets.ARBITRUM_NODE_URL }}
          ETHEREUM_NODE_URL: ${{ secrets.ETHEREUM_NODE_URL }}
          OPTIMISM_NODE_URL: ${{ secrets.OPTIMISM_NODE_URL }}
          POLYGON_NODE_URL: ${{ secrets.POLYGON_NODE_URL }}
          AVALANCHE_NODE_URL: ${{ secrets.AVALANCHE_NODE_URL }}

      - name: Generate coverage
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./lcov.info
          flags: unittests
          name: codecov-rust
          fail_ci_if_error: true
          verbose: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: lcov.info
