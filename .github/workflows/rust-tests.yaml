name: Rust Tests

on:
  pull_request:
    paths:
      - "apps/discourse/**"
      - "apps/mapper/**"
      - "apps/rindexer/**"
      - "libs/rust/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - "rust-toolchain.toml"
      - ".cargo/**"
      - ".github/workflows/rust-tests.yaml"
  push:
    branches:
      - "**"
    paths:
      - "apps/discourse/**"
      - "apps/mapper/**"
      - "apps/rindexer/**"
      - "libs/rust/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - "rust-toolchain.toml"
      - ".cargo/**"
      - ".github/workflows/rust-tests.yaml"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test-coverage:
    name: Build, Test & Coverage
    permissions:
      checks: write
      contents: read
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang lld

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: llvm-tools-preview

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install latest cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov,cargo-nextest

      - name: Build
        run: |
          cargo build --verbose
          # Clean up unnecessary build artifacts to save space
          rm -rf target/debug/deps/*.d
          rm -rf target/debug/incremental

      - name: Run tests with coverage
        env:
          ARBISCAN_API_KEY: ${{ secrets.ARBISCAN_API_KEY }}
          ARBITRUM_NODE_URL: ${{ secrets.ARBITRUM_NODE_URL }}
          AVALANCHE_NODE_URL: ${{ secrets.AVALANCHE_NODE_URL }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          ETHEREUM_NODE_URL: ${{ secrets.ETHEREUM_NODE_URL }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          OPTIMISM_NODE_URL: ${{ secrets.OPTIMISM_NODE_URL }}
          OPTIMISTIC_SCAN_API_KEY: ${{ secrets.OPTIMISTIC_SCAN_API_KEY }}
          POLYGON_NODE_URL: ${{ secrets.POLYGON_NODE_URL }}
        run: |
          cargo llvm-cov nextest --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./lcov.info
          flags: rust
          name: codecov-rust
          verbose: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: lcov.info

      - name: Show final disk space
        if: always()
        run: df -h
