services:
  erpc:
    image: ghcr.io/erpc/erpc:latest
    ports:
      - "4000:4000"
      - "4001:4001"
    volumes:
      - ./erpc.yaml:/root/erpc.yaml
    restart: unless-stopped
    environment:
      ERPC_REDIS_PASSWORD: ${ERPC_REDIS_PASSWORD}
      ERPC_ALCHEMY_KEY: ${ERPC_ALCHEMY_KEY}
      ERPC_BLAST_KEY: ${ERPC_BLAST_KEY}
      ERPC_DRPC_KEY: ${ERPC_DRPC_KEY}
    networks:
      - erpc_network
    depends_on:
      - redis

  redis:
    image: redis:7.4-alpine
    ports:
      - "6379:6379"
    environment:
      ERPC_REDIS_PASSWORD: ${ERPC_REDIS_PASSWORD}
    command: >
      redis-server
      --requirepass ${ERPC_REDIS_PASSWORD:-defaultpassword}
      --maxmemory 0
      --maxmemory-policy noeviction
      --io-threads 4
      --io-threads-do-reads true
      --active-defrag yes
      --active-defrag-threshold-lower 10
      --active-defrag-threshold-upper 100
      --active-defrag-cycle-min 25
      --active-defrag-cycle-max 75
      --maxclients 100000
      --tcp-backlog 511
      --tcp-keepalive 300
      --save ""
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 10G
        reservations:
          cpus: "2"
          memory: 4G
    volumes:
      - redis_data:/data
    networks:
      - erpc_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  monitoring:
    build: ./monitoring
    ports:
      - "3000:3000" # Grafana
      - "9090:9090" # Prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - ./monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
      - prometheus_data:/prometheus
      - grafana_data:/var/lib/grafana
    networks:
      - erpc_network
    depends_on:
      - erpc

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  erpc_network:
    driver: bridge
