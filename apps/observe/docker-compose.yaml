services:
  ch-server:
    image: clickhouse/clickhouse-server:head
    container_name: ch-server
    ports:
      - "9000:9000"
      - "8123:8123"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - ./clickhouse/ddl:/docker-entrypoint-initdb.d
      - ./clickhouse/config/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/config/users.xml:/etc/clickhouse-server/users.xml
      #     - ./clickhouse-data:/var/lib/clickhouse
      - ./clickhouse-logs:/var/log/clickhouse-server
    environment:
      - CLICKHOUSE_DB=otel
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    networks:
      - observe-network
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 5s
      timeout: 10s
      retries: 5

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.74.0
    container_name: otel-col
    hostname: otel-col
    restart: unless-stopped
    command: ["--config=/etc/otelcol-config.yml"]
    volumes:
      - ./otel/otelcol-config.yml:/etc/otelcol-config.yml
    ports:
      - "8888:8888" # Metrics endpoint
    environment:
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    networks:
      - observe-network
    depends_on:
      ch-server:
        condition: service_healthy

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
    environment:
      - NGINX_BEARER_TOKEN=${NGINX_BEARER_TOKEN}
      - TOKEN=${NGINX_BEARER_TOKEN}
    command: /bin/bash -c "envsubst '$$TOKEN' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    networks:
      - observe-network
    depends_on:
      - otelcol

  mongodb:
    container_name: mongodb
    hostname: mongodb
    image: mongo:6
    volumes:
      - mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb_user
      MONGO_INITDB_ROOT_PASSWORD: mongodb_password
    restart: unless-stopped
    networks:
      - observe-network

  hyperdx:
    container_name: hyperdx
    hostname: hyperdx
    image: docker.hyperdx.io/hyperdx/hyperdx:2-beta
    ports:
      - "8080:8080"
    environment:
      MONGO_URI: mongodb://mongodb_user:mongodb_password@mongodb:27017
      EXPRESS_SESSION_SECRET: ${EXPRESS_SESSION_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
    restart: unless-stopped
    depends_on:
      - mongodb
      - ch-server
    networks:
      - observe-network

networks:
  observe-network:

volumes:
  mongodb-data:
