services:
  ch-server:
    image: clickhouse/clickhouse-server:23.8.8-alpine
    container_name: hdx-oss-ch-server
    ports:
      - 8123:8123 # http api
      - 9000:9000 # native
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - ./docker/clickhouse/local/config.xml:/etc/clickhouse-server/config.xml
      - ./docker/clickhouse/local/users.xml:/etc/clickhouse-server/users.xml
      - .volumes/ch_data:/var/lib/clickhouse
      - .volumes/ch_logs:/var/log/clickhouse-server
    restart: on-failure
    networks:
      - observe-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8123/ping",
        ]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s

  go-parser:
    image: ghcr.io/hyperdxio/hyperdx:1.10.1-go-parser
    container_name: hdx-oss-go-parser
    environment:
      AGGREGATOR_API_URL: "http://aggregator:8001"
      HYPERDX_API_KEY: ${HYPERDX_API_KEY}
      PORT: 7777
    ports:
      - 7777:7777
    restart: on-failure
    networks:
      - observe-network

  miner:
    image: ghcr.io/hyperdxio/hyperdx:1.10.1-miner
    container_name: hdx-oss-miner
    environment:
      HYPERDX_API_KEY: ${HYPERDX_API_KEY}
      HYPERDX_ENABLE_ADVANCED_NETWORK_CAPTURE: 1
    ports:
      - 5123:5123
    restart: on-failure
    networks:
      - observe-network

  ingestor:
    image: ghcr.io/hyperdxio/hyperdx:1.10.1-ingestor
    container_name: hdx-oss-ingestor
    volumes:
      - ingestor_data:/var/lib/vector
    ports:
      - 8002:8002
      - 8686:8686
    restart: on-failure
    environment:
      AGGREGATOR_API_URL: "http://aggregator:8001"
      ENABLE_GO_PARSER: "true"
      GO_PARSER_API_URL: "http://go-parser:7777"
      RUST_BACKTRACE: full
      VECTOR_LOG: ${HYPERDX_LOG_LEVEL}
      VECTOR_OPENSSL_LEGACY_PROVIDER: "false"
    networks:
      - observe-network

  redis:
    image: redis:7.0.11-alpine
    container_name: hdx-oss-redis
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    restart: on-failure
    networks:
      - observe-network

  db:
    image: mongo:5.0.14-focal
    container_name: hdx-oss-db
    volumes:
      - db_data:/data/db
    ports:
      - 27017:27017
    restart: on-failure
    networks:
      - observe-network

  otel-collector:
    image: ghcr.io/hyperdxio/hyperdx:1.10.1-otel-collector
    container_name: hdx-oss-otel-collector
    environment:
      HYPERDX_LOG_LEVEL: ${HYPERDX_LOG_LEVEL}
      INGESTOR_API_URL: "http://ingestor:8002"
    restart: on-failure
    ports:
      - "13133:13133"
      - "1888:1888"
      - "24225:24225"
      - "4317:4317"
      - "4318:4318"
      - "55679:55679"
      - "8888:8888"
      - "9411:9411"
    networks:
      - observe-network

  aggregator:
    image: ghcr.io/hyperdxio/hyperdx:1.10.1-api
    container_name: hdx-oss-aggregator
    ports:
      - "8001:8001"
    restart: on-failure
    environment:
      AGGREGATOR_PAYLOAD_SIZE_LIMIT: "144mb"
      APP_TYPE: "aggregator"
      CLICKHOUSE_HOST: http://ch-server:8123
      CLICKHOUSE_PASSWORD: aggregator
      CLICKHOUSE_USER: aggregator
      FRONTEND_URL: "${HYPERDX_APP_URL}:${HYPERDX_APP_PORT}"
      HYPERDX_LOG_LEVEL: ${HYPERDX_LOG_LEVEL}
      MONGO_URI: "mongodb://db:27017/hyperdx"
      NODE_ENV: development
      PORT: 8001
      REDIS_URL: redis://redis:6379
      SERVER_URL: "${HYPERDX_API_URL}:${HYPERDX_API_PORT}"
    networks:
      - observe-network
    depends_on:
      - db
      - redis
      - ch-server

  api:
    image: ghcr.io/hyperdxio/hyperdx:1.10.1-api
    container_name: hdx-oss-api
    ports:
      - "${HYPERDX_API_PORT}:8000"
    restart: on-failure
    environment:
      AGGREGATOR_API_URL: "http://aggregator:8001"
      APP_TYPE: "api"
      CLICKHOUSE_HOST: http://ch-server:8123
      CLICKHOUSE_LOG_LEVEL: ${HYPERDX_LOG_LEVEL}
      CLICKHOUSE_PASSWORD: api
      CLICKHOUSE_USER: api
      EXPRESS_SESSION_SECRET: "hyperdx is cool ðŸ‘‹"
      FRONTEND_URL: "${HYPERDX_APP_URL}:${HYPERDX_APP_PORT}"
      HDX_NODE_ADVANCED_NETWORK_CAPTURE: 1
      HDX_NODE_BETA_MODE: 1
      HDX_NODE_CONSOLE_CAPTURE: 1
      HYPERDX_API_KEY: ${HYPERDX_API_KEY}
      HYPERDX_LOG_LEVEL: ${HYPERDX_LOG_LEVEL}
      INGESTOR_API_URL: "http://ingestor:8002"
      MINER_API_URL: "http://miner:5123"
      MONGO_URI: "mongodb://db:27017/hyperdx"
      NODE_ENV: development
      PORT: 8000
      REDIS_URL: redis://redis:6379
      SERVER_URL: "${HYPERDX_API_URL}:${HYPERDX_API_PORT}"
      USAGE_STATS_ENABLED: ${USAGE_STATS_ENABLED:-true}
    networks:
      - observe-network
    depends_on:
      - ch-server
      - db
      - redis

  app:
    image: ghcr.io/hyperdxio/hyperdx:1.10.1-app
    container_name: hdx-oss-app
    ports:
      - "${HYPERDX_APP_PORT}:3001"
    restart: on-failure
    environment:
      NEXT_PUBLIC_API_SERVER_URL: "http://localhost:8000"
      HYPERDX_API_KEY: ${HYPERDX_API_KEY}
      NODE_ENV: development
      PORT: 3001
    networks:
      - observe-network
    depends_on:
      - api

networks:
  observe-network:
    driver: bridge

volumes:
  ch_data:
  ch_logs:
  redis_data:
  db_data:
  ingestor_data:
